{"ast":null,"code":"var _jsxFileName = \"/home/Murtaza/React Udemy/React-start-project/01-starting-setup/src/components/Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"./Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  //setting initial useState value\n  const [filteredYear, setFilteredYear] = useState(\"2023\");\n\n  // setting updated year to useState on selection from dropdown\n  const ddChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  //to filter items based on year selected from dropdowns\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  let expenseContent = \"No expense found for selected year \" + filteredYear;\n  if (filteredExpenses.length() > 0) {\n    expenseContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n  }\n  return (\n    /*#__PURE__*/\n    // changing and using cards at its place as wrapper\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"expenses\",\n        children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n          defaultYear: filteredYear,\n          onDropDownChange: ddChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), expenseContent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Expenses, \"ySQn1BlQLTQeyOJPHL3rNdWewEg=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","ddChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expenseContent","length","map","title","amount","id","fileName","_jsxFileName","lineNumber","columnNumber","children","className","defaultYear","onDropDownChange","_c","$RefreshReg$"],"sources":["/home/Murtaza/React Udemy/React-start-project/01-starting-setup/src/components/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"./Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\n\nfunction Expenses(props) {\n\n  //setting initial useState value\n  const [filteredYear, setFilteredYear] = useState(\"2023\");\n\n  // setting updated year to useState on selection from dropdown\n  const ddChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  //to filter items based on year selected from dropdowns\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expenseContent = \"No expense found for selected year \" + filteredYear;\n  if(filteredExpenses.length()>0){\n    expenseContent = filteredExpenses.map((expense) => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      ></ExpenseItem>\n    ))\n\n  }\n\n  return (\n    // changing and using cards at its place as wrapper\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          defaultYear={filteredYear}\n          onDropDownChange={ddChangeHandler}\n        />\n        {expenseContent}\n        {/* commenting as we are now using dynamic approach\n        <ExpenseItem\n          title={props.items[0].title}\n          amount={props.items[0].amount}\n          date={props.items[0].date}\n        ></ExpenseItem>\n        <ExpenseItem\n          title={props.items[1].title}\n          amount={props.items[1].amount}\n          date={props.items[1].date}\n        ></ExpenseItem>\n        <ExpenseItem\n          title={props.items[2].title}\n          amount={props.items[2].amount}\n          date={props.items[2].date}\n        ></ExpenseItem>\n        <ExpenseItem\n          title={props.items[3].title}\n          amount={props.items[3].amount}\n          date={props.items[3].date}\n        ></ExpenseItem> */}\n      </Card>\n    </div>\n  );\n}\nexport default Expenses;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEvB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;;EAExD;EACA,MAAMW,eAAe,GAAIC,YAAY,IAAK;IACxCF,eAAe,CAACE,YAAY,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAAEC,OAAO,IAAK;IACvD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,YAAY;EAC/D,CAAC,CAAC;EAEF,IAAIW,cAAc,GAAG,qCAAqC,GAAGX,YAAY;EACzE,IAAGI,gBAAgB,CAACQ,MAAM,CAAC,CAAC,GAAC,CAAC,EAAC;IAC7BD,cAAc,GAAGP,gBAAgB,CAACS,GAAG,CAAEN,OAAO,iBAC5CX,OAAA,CAACJ,WAAW;MAEVsB,KAAK,EAAEP,OAAO,CAACO,KAAM;MACrBC,MAAM,EAAER,OAAO,CAACQ,MAAO;MACvBP,IAAI,EAAED,OAAO,CAACC;IAAK,GAHdD,OAAO,CAACS,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIH,CACf,CAAC;EAEJ;EAEA;IAAA;IACE;IACAxB,OAAA;MAAAyB,QAAA,eACEzB,OAAA,CAACH,IAAI;QAAC6B,SAAS,EAAC,UAAU;QAAAD,QAAA,gBACxBzB,OAAA,CAACF,cAAc;UACb6B,WAAW,EAAEvB,YAAa;UAC1BwB,gBAAgB,EAAEtB;QAAgB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,EACDT,cAAc;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAsBX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;AAEV;AAACrB,EAAA,CA7DQF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA8DjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}